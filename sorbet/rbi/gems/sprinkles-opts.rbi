# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/sprinkles-opts/all/sprinkles-opts.rbi
#
# sprinkles-opts-0.1.0

module Sprinkles
end
module Sprinkles::Opts
end
class Sprinkles::Opts::GetOpt
  def initialize(*args, &blk); end
  def self.build_config(*args, &blk); end
  def self.cmdline(*args, &blk); end
  def self.const(*args, &blk); end
  def self.convert_str(*args, &blk); end
  def self.decorator(*args, &blk); end
  def self.fields(*args, &blk); end
  def self.match_positional_fields(*args, &blk); end
  def self.parse(*args, &blk); end
  def self.program_name(*args, &blk); end
  def self.usage!(*args, &blk); end
  def self.valid_type?(*args, &blk); end
  def self.validate!(*args, &blk); end
  extend T::Helpers
  extend T::InterfaceWrapper::Helpers
  extend T::Private::Abstract::Hooks
  extend T::Private::Methods::MethodHooks
  extend T::Private::Methods::SingletonMethodHooks
  extend T::Sig
end
class Sprinkles::Opts::GetOpt::Option < T::Struct
  def __t_props_generated_deserialize(*args); end
  def __t_props_generated_serialize(*args); end
  def description; end
  def factory; end
  def get_placeholder(*args, &blk); end
  def long; end
  def name; end
  def optional?(*args, &blk); end
  def optparse_args(*args, &blk); end
  def placeholder; end
  def positional?(*args, &blk); end
  def repeated?(*args, &blk); end
  def self.inherited(s); end
  def short; end
  def type; end
  extend T::Private::Methods::MethodHooks
  extend T::Private::Methods::SingletonMethodHooks
  extend T::Props::ClassMethods
  extend T::Props::Plugin::ClassMethods
  extend T::Props::Plugin::ClassMethods
  extend T::Props::Plugin::ClassMethods
  extend T::Props::Plugin::ClassMethods
  extend T::Props::Plugin::ClassMethods
  extend T::Props::Serializable::ClassMethods
  extend T::Sig
end
